from datetime import datetime, timedelta
from icalendar import Calendar, Event

def generate_pregnancy_ical(due_date, filename):
    # Validate input due_date
    if not isinstance(due_date, datetime):
        raise ValueError("The due_date parameter must be a datetime object.")

    cal = Calendar()

    # Calculate the start and end dates of each week of pregnancy
    current_date = due_date
    for week in range(1, 41):
        start_date = current_date - timedelta(days=6)
        end_date = current_date

        # Create a new event for each week
        event = Event()
        event.add('summary', f'Week {week} of Pregnancy')
        event.add('dtstart', start_date)
        event.add('dtend', end_date)
        cal.add_component(event)

        # Move to the next week
        current_date -= timedelta(days=7)

    # Save the calendar to a file
    with open(filename, 'wb') as f:
        f.write(cal.to_ical())

if (__name__ == "__main__"):
    # Example usage:
    try:
        due_date = datetime(2023, 12, 25)
        filename = 'pregnancy_weekly_count.ics'
        generate_pregnancy_ical(due_date, filename)
    except ValueError as e:
        print(f"An error occurred: {str(e)}")
